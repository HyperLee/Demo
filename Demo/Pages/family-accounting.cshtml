@page
@model Demo.Pages.FamilyAccountingModel
@{
    ViewData["Title"] = "家庭共享記帳";
}

@section Styles {
    <link rel="stylesheet" href="~/css/voice-styles.css" asp-append-version="true" />
}

<div class="container mt-4">
    <!-- 錯誤和成功訊息 -->
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- 群組資訊 -->
    @if (Model.CurrentFamily != null)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card border-primary">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0"><i class="fas fa-calculator me-2"></i>@Model.CurrentFamily.Name - 家庭記帳</h4>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-md-3">
                                <div class="card text-white bg-success">
                                    <div class="card-body">
                                        <h4>$@Model.Statistics.TotalIncome.ToString("N0")</h4>
                                        <p class="mb-0">本月收入</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card text-white bg-danger">
                                    <div class="card-body">
                                        <h4>$@Model.Statistics.TotalExpense.ToString("N0")</h4>
                                        <p class="mb-0">本月支出</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card text-white bg-info">
                                    <div class="card-body">
                                        <h4>@Model.Statistics.BudgetUsage.ToString("F1")%</h4>
                                        <p class="mb-0">預算使用率</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card text-white bg-warning">
                                    <div class="card-body">
                                        <h4>@Model.Statistics.PendingApprovals</h4>
                                        <p class="mb-0">待審核項目</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 快速記帳區域 -->
        <div class="card mb-4">
            <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="fas fa-plus-circle me-2"></i>快速新增家庭支出</h5>
                <button type="button" id="voiceInputToggle" class="btn voice-toggle-btn">
                    <i class="fas fa-microphone me-1"></i>語音輸入
                </button>
            </div>
            
            <!-- 語音輸入區塊（預設隱藏） -->
            <div id="familyVoiceInputArea" class="d-none">
                <div class="voice-input-area" style="border-radius: 0; margin: 0;">
                    <div class="voice-status voice-status-idle" id="voiceStatus">
                        <div id="voiceIcon">
                            <i class="fas fa-microphone voice-icon"></i>
                        </div>
                        <p id="statusText" class="mb-3">點擊開始語音輸入家庭支出</p>
                        
                        <div class="voice-controls mb-3">
                            <button type="button" id="startVoiceBtn" class="btn voice-btn voice-btn-primary me-2">
                                <i class="fas fa-microphone me-1"></i>開始錄音
                            </button>
                            <button type="button" id="stopVoiceBtn" class="btn voice-btn voice-btn-danger d-none">
                                <i class="fas fa-stop me-1"></i>停止錄音
                            </button>
                        </div>
                        
                        <!-- 家庭語音提示 -->
                        <div class="voice-hint">
                            <div class="hint-title">家庭語音輸入範例：</div>
                            <div class="hint-examples">
                                <small>
                                    • "大家一起吃飯花了 600 元平均分攤"<br>
                                    • "我買菜花了 200 元"<br>
                                    • "今天搭車花了 50 元我支付"
                                </small>
                            </div>
                        </div>
                    </div>
                    
                    <!-- 語音識別結果顯示 -->
                    <div id="speechResult" class="alert alert-info mt-3 d-none">
                        <h6><i class="fas fa-volume-up me-2"></i>語音識別結果：</h6>
                        <p id="speechText" class="mb-0 speech-text"></p>
                    </div>
                    
                    <!-- 解析結果預覽 -->
                    <div id="parsedPreview" class="mt-3 d-none">
                        <!-- 動態填入解析結果 -->
                    </div>
                </div>
            </div>
            
            <div class="card-body">
                <form method="post" asp-page-handler="QuickExpense">
                    <div class="row">
                        <div class="col-md-2">
                            <select class="form-select" name="request.Type" required>
                                <option value="支出">支出</option>
                                <option value="收入">收入</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <input type="number" class="form-control" name="request.Amount" placeholder="金額" step="0.01" required>
                        </div>
                        <div class="col-md-2">
                            <select class="form-select" name="request.Category" required>
                                <option value="">選擇類別</option>
                                @foreach (var category in Model.Categories)
                                {
                                    <option value="@category.Name">@category.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" name="request.Description" placeholder="描述" required>
                        </div>
                        <div class="col-md-2">
                            <select class="form-select" name="request.SplitType">
                                <option value="我支付">我支付</option>
                                <option value="平均分攤">平均分攤</option>
                                <option value="自訂分攤">自訂分攤</option>
                            </select>
                        </div>
                        <div class="col-md-1">
                            <button type="submit" class="btn btn-success w-100">
                                <i class="fas fa-plus"></i>
                            </button>
                        </div>
                    </div>
                    <input type="hidden" name="request.Date" value="@DateTime.Today.ToString("yyyy-MM-dd")">
                </form>
            </div>
        </div>

        <!-- 待審核項目 (管理員可見) -->
        @if (Model.IsCurrentUserAdmin() && Model.PendingApprovals.Any())
        {
            <div class="card mb-4">
                <div class="card-header bg-warning">
                    <h5 class="mb-0"><i class="fas fa-clock me-2"></i>待審核項目</h5>
                </div>
                <div class="card-body">
                    @foreach (var record in Model.PendingApprovals)
                    {
                        <div class="card mb-2 border-warning">
                            <div class="card-body py-2">
                                <div class="row align-items-center">
                                    <div class="col-md-6">
                                        <strong>@record.Description</strong> - @record.UserNickname
                                        <br><small class="text-muted">@record.Category | @record.Date.ToString("MM/dd") | $@record.Amount.ToString("N0")</small>
                                    </div>
                                    <div class="col-md-6 text-end">
                                        <form method="post" asp-page-handler="ApproveRecord" class="d-inline">
                                            <input type="hidden" name="recordId" value="@record.Id" />
                                            <input type="hidden" name="approved" value="true" />
                                            <button type="submit" class="btn btn-sm btn-success me-2">
                                                <i class="fas fa-check"></i> 通過
                                            </button>
                                        </form>
                                        <form method="post" asp-page-handler="ApproveRecord" class="d-inline">
                                            <input type="hidden" name="recordId" value="@record.Id" />
                                            <input type="hidden" name="approved" value="false" />
                                            <input type="hidden" name="reason" value="需要更多資訊" />
                                            <button type="submit" class="btn btn-sm btn-danger" 
                                                    onclick="return confirm('確定要拒絕這筆記錄嗎？')">
                                                <i class="fas fa-times"></i> 拒絕
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- 記帳記錄列表 -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="fas fa-list me-2"></i>家庭記帳記錄</h5>
                <div class="btn-group">
                    <button class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-filter"></i> 篩選
                    </button>
                    <button class="btn btn-outline-success btn-sm">
                        <i class="fas fa-download"></i> 匯出
                    </button>
                </div>
            </div>
            <div class="card-body">
                @if (Model.Records.Any())
                {
                    @foreach (var group in Model.Records.GroupBy(r => r.Date.Date))
                    {
                        <div class="mb-4">
                            <h6 class="text-muted mb-3">@group.Key.ToString("yyyy年MM月dd日")</h6>
                            @foreach (var record in group.OrderByDescending(r => r.CreatedAt))
                            {
                                <div class="card mb-2">
                                    <div class="card-body py-3">
                                        <div class="row align-items-center">
                                            <div class="col-md-1 text-center">
                                                <div class="@(record.Type == "收入" ? "text-success" : "text-danger")">
                                                    <i class="@(record.Type == "收入" ? "fas fa-arrow-up" : "fas fa-arrow-down")"></i>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <strong>@record.Description</strong>
                                                <br><small class="text-muted">@record.Category</small>
                                            </div>
                                            <div class="col-md-2 @(record.Type == "收入" ? "text-success" : "text-danger")">
                                                <strong>@(record.Type == "支出" ? "-" : "+")$@record.Amount.ToString("N0")</strong>
                                            </div>
                                            <div class="col-md-2">
                                                <small class="text-muted">@record.UserNickname</small>
                                            </div>
                                            <div class="col-md-2">
                                                <span class="badge @Model.GetStatusBadgeClass(record.Status)">@record.Status</span>
                                            </div>
                                            <div class="col-md-1">
                                                @if (Model.CanDeleteRecord(record))
                                                {
                                                    <form method="post" asp-page-handler="DeleteRecord" class="d-inline">
                                                        <input type="hidden" name="recordId" value="@record.Id" />
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" 
                                                                onclick="return confirm('確定要刪除這筆記錄嗎？')"
                                                                title="刪除記錄">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </form>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-receipt fa-3x text-muted mb-3"></i>
                        <h5>尚無記帳記錄</h5>
                        <p class="text-muted">開始記錄您的家庭收支吧！</p>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-home fa-3x text-muted mb-3"></i>
            <h5>請先加入家庭群組</h5>
            <p class="text-muted">您需要先建立或加入一個家庭群組才能使用共享記帳功能</p>
            <a href="/family-management" class="btn btn-primary">
                <i class="fas fa-arrow-right"></i> 前往家庭管理
            </a>
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <script src="~/js/voice-input.js" asp-append-version="true"></script>
    <script>
        // SignalR 連接和語音輸入實例
        let connection = null;
        let familyVoiceInput = null;

        // 頁面載入後初始化
        document.addEventListener('DOMContentLoaded', function() {
            // 初始化 SignalR 連接
            initSignalRConnection();
            
            // 語音切換按鈕事件
            const voiceToggleBtn = document.getElementById('voiceInputToggle');
            if (voiceToggleBtn) {
                voiceToggleBtn.addEventListener('click', handleVoiceToggle);
            }
            
            // 自動關閉 alert
            setTimeout(function() {
                const alerts = document.querySelectorAll('.alert');
                alerts.forEach(function(alert) {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);
        });

        // 語音切換處理
        function handleVoiceToggle() {
            const voiceArea = document.getElementById('familyVoiceInputArea');
            const toggleBtn = document.getElementById('voiceInputToggle');
            
            if (voiceArea.classList.contains('d-none')) {
                // 顯示語音輸入區域
                voiceArea.classList.remove('d-none');
                toggleBtn.classList.add('active');
                toggleBtn.innerHTML = '<i class="fas fa-keyboard me-1"></i>手動輸入';
                
                // 初始化語音輸入
                initFamilyVoiceInput();
            } else {
                // 隱藏語音輸入區域
                voiceArea.classList.add('d-none');
                toggleBtn.classList.remove('active');
                toggleBtn.innerHTML = '<i class="fas fa-microphone me-1"></i>語音輸入';
                
                // 停止語音輸入
                if (familyVoiceInput) {
                    familyVoiceInput.clearResult();
                }
            }
        }

        // 初始化家庭語音輸入
        function initFamilyVoiceInput() {
            familyVoiceInput = new VoiceInput({
                context: 'family',
                container: '#familyVoiceInputArea',
                targetForm: 'form[asp-page-handler="QuickExpense"]',
                onResult: function(result) {
                    console.log('家庭語音解析結果:', result);
                    
                    // 語音解析完成後，可以直接提交家庭記帳
                    if (result.isSuccess && result.amount && result.category) {
                        submitVoiceFamilyRecord(result);
                    }
                },
                onError: function(error) {
                    console.error('家庭語音輸入錯誤:', error);
                }
            });

            // 覆寫語音輸入組件的填寫表單方法以適應家庭記帳
            if (familyVoiceInput) {
                familyVoiceInput.fillForm = function(result) {
                    const form = $('form[asp-page-handler="QuickExpense"]');
                    
                    // 填寫類型
                    if (result.type) {
                        form.find('select[name="request.Type"]').val(result.type === 'Income' ? '收入' : '支出');
                    }
                    
                    // 填寫金額
                    if (result.amount) {
                        form.find('input[name="request.Amount"]').val(result.amount);
                    }
                    
                    // 填寫類別
                    if (result.category) {
                        form.find('select[name="request.Category"]').val(result.category);
                    }
                    
                    // 填寫描述
                    if (result.description) {
                        form.find('input[name="request.Description"]').val(result.description);
                    }
                    
                    // 填寫分攤方式
                    if (result.splitType) {
                        form.find('select[name="request.SplitType"]').val(result.splitType);
                    }
                    
                    // 填寫日期（預設今天）
                    form.find('input[name="request.Date"]').val('@DateTime.Today.ToString("yyyy-MM-dd")');
                    
                    // 觸發相關事件
                    form.find('input, select').trigger('change');
                };
            }
        }

        // 提交語音家庭記帳記錄
        async function submitVoiceFamilyRecord(parseResult) {
            try {
                const voiceRequest = {
                    type: parseResult.type === 'Income' ? '收入' : '支出',
                    amount: parseResult.amount,
                    category: parseResult.category,
                    description: parseResult.description,
                    date: '@DateTime.Today.ToString("yyyy-MM-dd")',
                    splitType: parseResult.splitType || '我支付',
                    voiceText: parseResult.originalText,
                    parseConfidence: parseResult.parseConfidence
                };

                const response = await fetch('/family-accounting?handler=QuickExpenseVoice', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify(voiceRequest)
                });

                const result = await response.json();
                
                if (result.success) {
                    showNotification(result.message, 'success');
                    // 重新載入頁面以顯示新記錄
                    setTimeout(() => location.reload(), 2000);
                    
                    // 發送 SignalR 通知（如果連接可用）
                    if (connection) {
                        connection.invoke("NotifyVoiceRecord", '@Model.CurrentFamily?.Id', parseResult);
                    }
                } else {
                    showNotification(result.message || '語音記帳失敗', 'danger');
                }
            } catch (error) {
                console.error('提交語音家庭記帳失敗:', error);
                showNotification('提交語音記帳記錄失敗，請重試', 'danger');
            }
        }

        // 初始化 SignalR 連接
        function initSignalRConnection() {
            if ('@Model.CurrentFamily?.Id' !== '') {
                connection = new signalR.HubConnectionBuilder()
                    .withUrl("/familyHub")
                    .build();

                connection.start().then(function () {
                    console.log('SignalR 連接成功');
                    // 加入家庭群組
                    connection.invoke("JoinFamily", '@Model.CurrentFamily?.Id');
                }).catch(function (err) {
                    console.error('SignalR 連接失敗:', err.toString());
                });

                // 監聽新記錄通知
                connection.on("ExpenseAdded", function (notification) {
                    showNotification(notification.message, 'success');
                    // 重新載入頁面以顯示新記錄
                    setTimeout(() => location.reload(), 2000);
                });

                // 監聽記錄更新通知
                connection.on("ExpenseUpdated", function (notification) {
                    showNotification(notification.message, 'info');
                });

                // 監聽記錄刪除通知
                connection.on("ExpenseDeleted", function (notification) {
                    showNotification(notification.message, 'warning');
                    // 重新載入頁面以移除刪除的記錄
                    setTimeout(() => location.reload(), 2000);
                });

                // 監聽審核結果通知
                connection.on("RecordApproval", function (notification) {
                    showNotification(notification.message, notification.data.approved ? 'success' : 'danger');
                    // 重新載入頁面以更新記錄狀態
                    setTimeout(() => location.reload(), 2000);
                });
            }
        }

        // 顯示通知
        function showNotification(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; max-width: 400px;';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alertDiv);
            
            // 3秒後自動關閉
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 3000);
        }
    </script>
}
