@page
@model Demo.Pages.index4
@{
    ViewData["Title"] = "備忘錄列表";
}

<style>
    /* === 備忘錄系統深色模式樣式 === */
    [data-bs-theme="dark"] .search-container .form-control {
        background-color: var(--input-bg);
        border-color: var(--input-border);
        color: var(--bs-body-color);
    }

    [data-bs-theme="dark"] .memo-card {
        background-color: var(--card-bg);
        border-color: var(--border-color);
        transition: all 0.3s ease;
    }

    [data-bs-theme="dark"] .memo-card:hover {
        box-shadow: 0 8px 24px var(--shadow-color);
        transform: translateY(-2px);
    }

    [data-bs-theme="dark"] .tag-badge {
        background-color: var(--surface-variant);
        color: var(--bs-body-color);
        border: 1px solid var(--border-color);
    }

    [data-bs-theme="dark"] .priority-high {
        background-color: rgba(234, 134, 143, 0.2);
        color: var(--bs-danger);
    }

    [data-bs-theme="dark"] .priority-medium {
        background-color: rgba(255, 218, 106, 0.2);
        color: var(--bs-warning);
    }

    [data-bs-theme="dark"] .priority-low {
        background-color: rgba(117, 183, 152, 0.2);
        color: var(--bs-success);
    }

    [data-bs-theme="dark"] .form-select,
    [data-bs-theme="dark"] .form-control {
        background-color: var(--input-bg);
        border-color: var(--input-border);
        color: var(--bs-body-color);
    }

    [data-bs-theme="dark"] .collapse .card-body {
        background-color: var(--surface-variant);
        border-color: var(--border-color);
    }

    [data-bs-theme="dark"] .btn-outline-secondary {
        color: var(--bs-body-color);
        border-color: var(--border-color);
    }

    [data-bs-theme="dark"] .btn-outline-secondary:hover {
        background-color: var(--bs-secondary);
        color: white;
    }

    [data-bs-theme="dark"] .memo-title {
        color: var(--bs-body-color);
    }

    [data-bs-theme="dark"] .memo-content {
        color: var(--text-muted);
    }

    [data-bs-theme="dark"] .memo-meta {
        color: var(--text-muted);
    }

    [data-bs-theme="dark"] .text-muted {
        color: var(--text-muted) !important;
    }

    [data-bs-theme="dark"] .border-start {
        border-left-color: var(--border-color) !important;
    }
</style>

<div class="container-fluid">
    <!-- 搜尋區域 -->
    <div class="row mb-4">
        <div class="col-12">
            <form method="post" asp-page-handler="Search" id="searchForm">
                @Html.AntiForgeryToken()
                <!-- 主搜尋列 -->
                <div class="search-container mb-3">
                    <div class="input-group input-group-lg">
                        <span class="input-group-text">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control" asp-for="SearchFilter.Keyword"
                               placeholder="搜尋備忘錄標題、內容或標籤..." 
                               id="searchInput" />
                        <button class="btn btn-outline-secondary" type="button" 
                                data-bs-toggle="collapse" data-bs-target="#advancedFilters" 
                                aria-expanded="false">
                            <i class="fas fa-filter"></i> 進階篩選
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i> 搜尋
                        </button>
                        @if (Model.HasSearchCriteria())
                        {
                            <button type="submit" class="btn btn-outline-secondary" 
                                    asp-page-handler="ClearSearch">
                                <i class="fas fa-times"></i> 清除
                            </button>
                        }
                    </div>
                </div>

                <!-- 進階篩選面板 -->
                <div class="collapse @(Model.HasSearchCriteria() ? "show" : "")" id="advancedFilters">
                    <div class="card card-body">
                        <div class="row">
                            <!-- 標籤篩選 -->
                            <div class="col-md-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <label class="form-label mb-0">
                                        <i class="fas fa-tags"></i> 標籤篩選
                                    </label>
                                    <button type="button" class="btn btn-link btn-sm p-0" onclick="showTagManagementModal()">
                                        <i class="fas fa-cog"></i> 管理
                                    </button>
                                </div>
                                <div class="tag-filter-container">
                                    @if (Model.AllTags.Any())
                                    {
                                        @foreach (var tag in Model.AllTags.Take(8))
                                        {
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="checkbox" 
                                                       name="SearchFilter.Tags" value="@tag.Name" 
                                                       id="tag-@tag.Id" 
                                                       @(Model.SearchFilter.Tags.Contains(tag.Name) ? "checked" : "") />
                                                <label class="form-check-label" for="tag-@tag.Id">
                                                    <span class="tag-badge" style="background-color: @tag.Color">
                                                        @tag.Name
                                                    </span>
                                                </label>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <small class="text-muted">尚無標籤</small>
                                    }
                                </div>
                            </div>

                            <!-- 分類篩選 -->
                            <div class="col-md-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <label class="form-label mb-0">
                                        <i class="fas fa-folder"></i> 分類篩選
                                    </label>
                                    <button type="button" class="btn btn-link btn-sm p-0" onclick="showCategoryManagementModal()">
                                        <i class="fas fa-cog"></i> 管理
                                    </button>
                                </div>
                                <div class="category-filter-container">
                                    <select class="form-select form-select-sm" asp-for="SearchFilter.CategoryId">
                                        <option value="">所有分類</option>
                                        @if (Model.AllCategories.Any())
                                        {
                                            @foreach (var category in Model.AllCategories)
                                            {
                                                <option value="@category.Id" selected="@(Model.SearchFilter.CategoryId == category.Id)">
                                                    @category.Name
                                                </option>
                                            }
                                        }
                                        <option value="0" selected="@(Model.SearchFilter.CategoryId == 0)">未分類</option>
                                    </select>
                                    @if (!Model.AllCategories.Any())
                                    {
                                        <small class="text-muted d-block mt-1">尚無分類</small>
                                    }
                                </div>
                            </div>

                            <!-- 日期範圍 -->
                            <div class="col-md-3">
                                <label class="form-label">
                                    <i class="fas fa-calendar"></i> 日期範圍
                                </label>
                                <div class="row">
                                    <div class="col-6">
                                        <input type="date" class="form-control form-control-sm" 
                                               asp-for="SearchFilter.StartDate" placeholder="開始日期" />
                                    </div>
                                    <div class="col-6">
                                        <input type="date" class="form-control form-control-sm" 
                                               asp-for="SearchFilter.EndDate" placeholder="結束日期" />
                                    </div>
                                </div>
                            </div>

                            <!-- 排序選項 -->
                            <div class="col-md-3">
                                <label class="form-label">
                                    <i class="fas fa-sort"></i> 排序方式
                                </label>
                                <div class="row">
                                    <div class="col-8">
                                        <select class="form-select form-select-sm" asp-for="SearchFilter.SortBy">
                                            <option value="ModifiedDate">修改日期</option>
                                            <option value="CreatedDate">建立日期</option>
                                            <option value="Title">標題</option>
                                        </select>
                                    </div>
                                    <div class="col-4">
                                        <select class="form-select form-select-sm" asp-for="SearchFilter.SortOrder">
                                            <option value="Desc">降冪</option>
                                            <option value="Asc">升冪</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- 標題和操作區域 -->
    <div class="row mb-4">
        <div class="col-md-6">
            <h1 class="h2">@ViewData["Title"]</h1>
            @if (Model.ViewModel.TotalCount > 0)
            {
                <p class="text-muted">
                    @if (Model.HasSearchCriteria())
                    {
                        <span>搜尋結果：@Model.ViewModel.TotalCount 則備忘錄</span>
                    }
                    else
                    {
                        <span>總共 @Model.ViewModel.TotalCount 則備忘錄</span>
                    }
                </p>
            }
        </div>
        <div class="col-md-6 text-end">
            <a asp-page="index5" class="btn btn-primary btn-lg">
                <i class="fas fa-plus"></i> 新增備忘錄
            </a>
        </div>
    </div>

    <!-- 成功/錯誤訊息 -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- 批次操作工具列 -->
    <div class="batch-toolbar" id="batchToolbar" style="display: none;">
        <div class="card border-primary mb-3">
            <div class="card-body py-2">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <span class="selected-count text-primary fw-bold">
                            已選擇 <strong id="selectedCount">0</strong> 項
                        </span>
                    </div>
                    
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="showBatchTagModal()">
                            <i class="fas fa-tag"></i> 加標籤
                        </button>
                        <button type="button" class="btn btn-outline-info btn-sm" onclick="showBatchCategoryModal()">
                            <i class="fas fa-folder"></i> 更改分類
                        </button>
                        <button type="button" class="btn btn-outline-success btn-sm" onclick="batchExport()">
                            <i class="fas fa-download"></i> 匯出
                        </button>
                        <button type="button" class="btn btn-outline-danger btn-sm" onclick="showBatchDeleteModal()">
                            <i class="fas fa-trash"></i> 刪除
                        </button>
                    </div>
                    
                    <button type="button" class="btn btn-outline-secondary btn-sm" onclick="clearAllSelections()">
                        <i class="fas fa-times"></i> 取消選擇
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- 備忘錄列表 -->
    @if (Model.ViewModel.Notes.Any())
    {
        <!-- 全選控制 -->
        <div class="row mb-2">
            <div class="col-12">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="masterCheckbox">
                    <label class="form-check-label fw-bold" for="masterCheckbox">
                        全選 / 取消全選
                    </label>
                </div>
            </div>
        </div>

        <div class="row">
            @for (int i = 0; i < Model.ViewModel.Notes.Count; i++)
            {
                var note = Model.ViewModel.Notes[i];
                var isEvenRow = i % 2 == 1;
                var backgroundClass = isEvenRow ? "bg-light" : "bg-white";

                <div class="col-12 mb-3">
                    <div class="card @backgroundClass shadow-sm h-100 note-card">
                        <div class="card-body">
                            <div class="row">
                                <!-- 選擇核取方塊 -->
                                <div class="col-auto d-flex align-items-center">
                                    <input class="form-check-input item-checkbox me-2" 
                                           type="checkbox" 
                                           value="@note.Id" 
                                           id="note-@note.Id"
                                           onchange="toggleItemSelection(this)" />
                                </div>

                                <div class="col-md-8">
                                    <!-- 標題 -->
                                    <h5 class="card-title mb-2">
                                        <a asp-page="index5" asp-route-id="@note.Id" class="text-decoration-none">
                                            @(note.Title.Length > 50 ? note.Title.Substring(0, 50) + "..." : note.Title)
                                        </a>
                                    </h5>
                                    
                                    <!-- 內容摘要 -->
                                    <p class="card-text text-muted mb-2">
                                        @(note.Content.Length > 100 ? note.Content.Substring(0, 100) + "..." : note.Content)
                                    </p>
                                    
                                    <!-- 分類顯示 -->
                                    @if (note.Category != null)
                                    {
                                        <div class="mb-2">
                                            <span class="badge category-badge me-2">
                                                <i class="fas fa-folder"></i> @note.Category.Name
                                            </span>
                                        </div>
                                    }
                                    
                                    <!-- 標籤顯示 -->
                                    @if (note.Tags.Any())
                                    {
                                        <div class="mb-2">
                                            @foreach (var tag in note.Tags.Take(5))
                                            {
                                                <span class="badge tag-badge me-1" style="background-color: @tag.Color; color: white;">
                                                    <i class="fas fa-tag"></i> @tag.Name
                                                </span>
                                            }
                                            @if (note.Tags.Count > 5)
                                            {
                                                <span class="text-muted small">+@(note.Tags.Count - 5) 個標籤</span>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="mb-2">
                                            <small class="no-tags-indicator">
                                                <i class="fas fa-tags"></i> 尚無標籤
                                            </small>
                                        </div>
                                    }
                                    
                                    <!-- 日期資訊 -->
                                    <div class="row text-sm text-muted">
                                        <div class="col-sm-6">
                                            <small>
                                                <i class="fas fa-calendar-plus"></i>
                                                建立: @note.CreatedDate.ToString("yyyy-MM-dd HH:mm")
                                            </small>
                                        </div>
                                        <div class="col-sm-6">
                                            <small>
                                                <i class="fas fa-edit"></i>
                                                修改: @note.ModifiedDate.ToString("yyyy-MM-dd HH:mm")
                                            </small>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- 操作按鈕 -->
                                <div class="col-md-3 text-end d-flex flex-column justify-content-center">
                                    <div class="btn-group" role="group">
                                        <a asp-page="index5" asp-route-id="@note.Id" class="btn btn-info btn-sm">
                                            <i class="fas fa-eye"></i> 查看
                                        </a>
                                        <button type="button" class="btn btn-danger btn-sm" 
                                                onclick="confirmDelete(@note.Id, '@Html.Raw(Html.Encode(note.Title))', @Model.ViewModel.CurrentPage)">
                                            <i class="fas fa-trash"></i> 刪除
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- 分頁控制 -->
        @if (Model.ViewModel.TotalPages > 1)
        {
            <nav aria-label="備忘錄分頁">
                <ul class="pagination justify-content-center">
                    <!-- 首頁 -->
                    <li class="page-item @(Model.ViewModel.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-page="index4" asp-route-page="1">首頁</a>
                    </li>
                    
                    <!-- 上一頁 -->
                    <li class="page-item @(Model.ViewModel.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-page="index4" asp-route-page="@(Model.ViewModel.CurrentPage - 1)">上一頁</a>
                    </li>

                    <!-- 頁碼導航 -->
                    @{
                        var startPage = Math.Max(1, Model.ViewModel.CurrentPage - 2);
                        var endPage = Math.Min(Model.ViewModel.TotalPages, Model.ViewModel.CurrentPage + 2);
                    }

                    @if (startPage > 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    @for (int pageNum = startPage; pageNum <= endPage; pageNum++)
                    {
                        <li class="page-item @(pageNum == Model.ViewModel.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-page="index4" asp-route-page="@pageNum">@pageNum</a>
                        </li>
                    }

                    @if (endPage < Model.ViewModel.TotalPages)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }

                    <!-- 下一頁 -->
                    <li class="page-item @(Model.ViewModel.CurrentPage == Model.ViewModel.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-page="index4" asp-route-page="@(Model.ViewModel.CurrentPage + 1)">下一頁</a>
                    </li>
                    
                    <!-- 末頁 -->
                    <li class="page-item @(Model.ViewModel.CurrentPage == Model.ViewModel.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-page="index4" asp-route-page="@Model.ViewModel.TotalPages">末頁</a>
                    </li>
                </ul>
                
                <!-- 分頁資訊 -->
                <div class="text-center mt-2">
                    <small class="text-muted">
                        第 @Model.ViewModel.CurrentPage 頁，共 @Model.ViewModel.TotalPages 頁
                    </small>
                </div>
            </nav>
        }
    }
    else
    {
        <!-- 無資料狀態 -->
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-sticky-note fa-4x text-muted"></i>
            </div>
            <h3 class="text-muted">還沒有任何備忘錄</h3>
            <p class="text-muted">點擊上方「新增備忘錄」按鈕開始建立您的第一則備忘錄。</p>
            <a asp-page="index5" class="btn btn-primary btn-lg">
                <i class="fas fa-plus"></i> 新增備忘錄
            </a>
        </div>
    }
</div>

<!-- 刪除確認對話框 -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">確認刪除</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>您確定要刪除這則備忘錄嗎？</p>
                <p class="text-muted"><strong>標題：</strong><span id="deleteNoteTitle"></span></p>
                <p class="text-warning"><small><i class="fas fa-exclamation-triangle"></i> 此操作無法復原！</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <form method="post" asp-page-handler="Delete" style="display: inline;">
                    <input type="hidden" name="id" id="deleteNoteId" />
                    <input type="hidden" name="page" id="deleteCurrentPage" />
                    <button type="submit" class="btn btn-danger">確認刪除</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 批次刪除確認對話框 -->
<div class="modal fade" id="batchDeleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">批次刪除確認</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>您確定要刪除選中的 <strong id="batchDeleteCount">0</strong> 則備忘錄嗎？</p>
                <p class="text-warning"><i class="fas fa-exclamation-triangle"></i> 此操作無法復原！</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger" onclick="executeBatchDelete()">確認刪除</button>
            </div>
        </div>
    </div>
</div>

<!-- 批次新增標籤對話框 -->
<div class="modal fade" id="batchTagModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">批次新增標籤</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">標籤名稱</label>
                    <input type="text" class="form-control" id="batchTagName" placeholder="輸入標籤名稱" />
                    <div class="form-text">為選中的 <strong id="batchTagCount">0</strong> 則備忘錄新增標籤</div>
                </div>
                <div class="mb-3">
                    <label class="form-label">標籤顏色</label>
                    <input type="color" class="form-control form-control-color" id="batchTagColor" value="#007bff" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" onclick="executeBatchTag()">新增標籤</button>
            </div>
        </div>
    </div>
</div>

<!-- 批次更改分類對話框 -->
<div class="modal fade" id="batchCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">批次更改分類</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">選擇分類</label>
                    <select class="form-select" id="batchCategorySelect">
                        <option value="">請選擇分類</option>
                        @if (Model.AllCategories.Any())
                        {
                            @foreach (var category in Model.AllCategories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        }
                    </select>
                    <div class="form-text">為選中的 <strong id="batchCategoryCount">0</strong> 則備忘錄更改分類</div>
                </div>
                
                <!-- 快速建立分類 -->
                <div class="mb-3">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <label class="form-label mb-0">快速建立新分類</label>
                        <button type="button" class="btn btn-link btn-sm p-0 category-toggle-btn" onclick="toggleNewCategoryForm()">
                            <i class="fas fa-plus" id="newCategoryToggleIcon"></i> <span id="newCategoryToggleText">展開</span>
                        </button>
                    </div>
                    <div class="collapse" id="newCategoryForm">
                        <div class="card card-body new-category-form">
                            <div class="row">
                                <div class="col-8">
                                    <input type="text" class="form-control form-control-sm" 
                                           id="newCategoryName" placeholder="輸入分類名稱" maxlength="50" />
                                </div>
                                <div class="col-4">
                                    <button type="button" class="btn btn-success btn-sm w-100" onclick="createNewCategory()">
                                        <i class="fas fa-check"></i> 建立
                                    </button>
                                </div>
                            </div>
                            <small class="text-muted mt-1">建立後將自動選擇此分類</small>
                        </div>
                    </div>
                </div>
                
                @if (!Model.AllCategories.Any())
                {
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i>
                        <strong>提示：</strong>尚未建立任何分類，請使用上方「快速建立新分類」功能建立第一個分類。
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-info" onclick="executeBatchCategory()" 
                        @(!Model.AllCategories.Any() ? "disabled" : "")>
                    更改分類
                </button>
            </div>
        </div>
    </div>
</div>

<!-- 批次匯出對話框 -->
<div class="modal fade" id="batchExportModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">批次匯出備忘錄</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>選擇要匯出 <strong id="batchExportCount">0</strong> 則備忘錄的格式：</p>
                
                <div class="row text-center">
                    <div class="col-md-4 mb-3">
                        <button type="button" class="btn btn-outline-danger w-100" 
                                onclick="executeBatchExport('pdf')">
                            <i class="fas fa-file-pdf fa-2x d-block mb-2"></i>
                            <strong>PDF 文件</strong>
                            <small class="d-block text-muted">適合列印和分享</small>
                        </button>
                    </div>
                    
                    <div class="col-md-4 mb-3">
                        <button type="button" class="btn btn-outline-success w-100" 
                                onclick="executeBatchExport('excel')">
                            <i class="fas fa-file-excel fa-2x d-block mb-2"></i>
                            <strong>Excel 試算表</strong>
                            <small class="d-block text-muted">適合資料分析</small>
                        </button>
                    </div>
                    
                    <div class="col-md-4 mb-3">
                        <button type="button" class="btn btn-outline-primary w-100" 
                                onclick="executeBatchExport('json')">
                            <i class="fas fa-file-code fa-2x d-block mb-2"></i>
                            <strong>JSON 備份</strong>
                            <small class="d-block text-muted">適合系統備份</small>
                        </button>
                    </div>
                </div>
                
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    <strong>提示：</strong>匯出的檔案將包含備忘錄的標題、內容、標籤、分類和日期資訊。
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
            </div>
        </div>
    </div>
</div>

<!-- 標籤管理對話框 -->
<div class="modal fade" id="tagManagementModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-tags"></i> 標籤管理
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- 標籤清單 -->
                    <div class="col-md-8">
                        <h6><i class="fas fa-list"></i> 現有標籤</h6>
                        <div id="tagList">
                            @if (Model.AllTags.Any())
                            {
                                @foreach (var tag in Model.AllTags)
                                {
                                    <div class="tag-item d-flex justify-content-between align-items-center mb-2 p-2 border rounded" data-tag-id="@tag.Id">
                                        <div class="d-flex align-items-center">
                                            <span class="tag-badge me-2" style="background-color: @tag.Color">
                                                @tag.Name
                                            </span>
                                            <small class="text-muted">使用次數: @tag.UsageCount</small>
                                        </div>
                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                onclick="confirmDeleteTag(@tag.Id, '@Html.Raw(Html.Encode(tag.Name))', @tag.UsageCount)"
                                                title="刪除標籤">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-muted">尚無標籤</p>
                            }
                        </div>
                    </div>
                    
                    <!-- 新增標籤 -->
                    <div class="col-md-4">
                        <h6><i class="fas fa-plus"></i> 新增標籤</h6>
                        <div class="mb-3">
                            <label class="form-label">標籤名稱</label>
                            <input type="text" class="form-control" id="newTagName" placeholder="輸入標籤名稱" maxlength="30" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">標籤顏色</label>
                            <input type="color" class="form-control form-control-color" id="newTagColor" value="#007bff" />
                        </div>
                        <button type="button" class="btn btn-primary w-100" onclick="createNewTagFromManagement()">
                            <i class="fas fa-plus"></i> 新增標籤
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
            </div>
        </div>
    </div>
</div>

<!-- 分類管理對話框 -->
<div class="modal fade" id="categoryManagementModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-folder"></i> 分類管理
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- 分類清單 -->
                    <div class="col-md-8">
                        <h6><i class="fas fa-list"></i> 現有分類</h6>
                        <div id="categoryList">
                            @if (Model.AllCategories.Any())
                            {
                                @foreach (var category in Model.AllCategories)
                                {
                                    <div class="category-item d-flex justify-content-between align-items-center mb-2 p-2 border rounded" data-category-id="@category.Id">
                                        <div class="d-flex align-items-center">
                                            <span class="category-badge me-2">
                                                <i class="@category.Icon"></i> @category.Name
                                            </span>
                                        </div>
                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                onclick="confirmDeleteCategory(@category.Id, '@Html.Raw(Html.Encode(category.Name))')"
                                                title="刪除分類">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-muted">尚無分類</p>
                            }
                        </div>
                    </div>
                    
                    <!-- 新增分類 -->
                    <div class="col-md-4">
                        <h6><i class="fas fa-plus"></i> 新增分類</h6>
                        <div class="mb-3">
                            <label class="form-label">分類名稱</label>
                            <input type="text" class="form-control" id="newCategoryName" placeholder="輸入分類名稱" maxlength="50" />
                        </div>
                        <button type="button" class="btn btn-primary w-100" onclick="createNewCategoryFromManagement()">
                            <i class="fas fa-plus"></i> 新增分類
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
            </div>
        </div>
    </div>
</div>

<!-- 刪除標籤確認對話框 -->
<div class="modal fade" id="deleteTagModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">確認刪除標籤</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>您確定要刪除標籤「<strong id="deleteTagName"></strong>」嗎？</p>
                <div id="tagUsageWarning" class="alert alert-warning" style="display: none;">
                    <i class="fas fa-exclamation-triangle"></i>
                    此標籤目前被 <strong id="tagUsageCount">0</strong> 則備忘錄使用，刪除後將會從這些備忘錄中移除此標籤。
                </div>
                <p class="text-danger"><small><i class="fas fa-exclamation-triangle"></i> 此操作無法復原！</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteTagBtn">確認刪除</button>
            </div>
        </div>
    </div>
</div>

<!-- 刪除分類確認對話框 -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">確認刪除分類</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>您確定要刪除分類「<strong id="deleteCategoryName"></strong>」嗎？</p>
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    刪除分類後，使用此分類的備忘錄將變為「未分類」狀態。
                </div>
                <p class="text-danger"><small><i class="fas fa-exclamation-triangle"></i> 此操作無法復原！</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteCategoryBtn">確認刪除</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // 批次選擇管理
        class BatchSelector {
            constructor() {
                this.selectedItems = new Set();
                this.init();
            }
            
            init() {
                // 主控核取方塊
                const masterCheckbox = document.getElementById('masterCheckbox');
                if (masterCheckbox) {
                    masterCheckbox.addEventListener('change', (e) => {
                        this.toggleAll(e.target.checked);
                    });
                }
            }
            
            toggleAll(checked) {
                const itemCheckboxes = document.querySelectorAll('.item-checkbox');
                itemCheckboxes.forEach(checkbox => {
                    checkbox.checked = checked;
                    this.toggleItem(checkbox.value, checked);
                });
            }
            
            toggleItem(noteId, checked) {
                if (checked) {
                    this.selectedItems.add(noteId);
                } else {
                    this.selectedItems.delete(noteId);
                }
                
                this.updateUI();
            }
            
            updateUI() {
                const count = this.selectedItems.size;
                document.getElementById('selectedCount').textContent = count;
                document.getElementById('batchToolbar').style.display = count > 0 ? 'block' : 'none';
                
                // 更新主控核取方塊狀態
                const masterCheckbox = document.getElementById('masterCheckbox');
                const itemCheckboxes = document.querySelectorAll('.item-checkbox');
                const checkedCount = Array.from(itemCheckboxes).filter(cb => cb.checked).length;
                
                if (masterCheckbox) {
                    if (checkedCount === 0) {
                        masterCheckbox.checked = false;
                        masterCheckbox.indeterminate = false;
                    } else if (checkedCount === itemCheckboxes.length) {
                        masterCheckbox.checked = true;
                        masterCheckbox.indeterminate = false;
                    } else {
                        masterCheckbox.checked = false;
                        masterCheckbox.indeterminate = true;
                    }
                }
            }
            
            getSelectedIds() {
                return Array.from(this.selectedItems);
            }
            
            clearAll() {
                this.selectedItems.clear();
                document.querySelectorAll('.item-checkbox').forEach(checkbox => {
                    checkbox.checked = false;
                });
                this.updateUI();
            }
        }

        const batchSelector = new BatchSelector();

        // 項目選擇切換
        function toggleItemSelection(checkbox) {
            batchSelector.toggleItem(checkbox.value, checkbox.checked);
        }

        // 清除所有選擇
        function clearAllSelections() {
            batchSelector.clearAll();
        }

        // 單項刪除確認
        function confirmDelete(noteId, noteTitle, currentPage) {
            document.getElementById('deleteNoteId').value = noteId;
            document.getElementById('deleteNoteTitle').textContent = noteTitle;
            document.getElementById('deleteCurrentPage').value = currentPage;
            
            var modal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            modal.show();
        }

        // 顯示批次刪除對話框
        function showBatchDeleteModal() {
            const selectedIds = batchSelector.getSelectedIds();
            if (selectedIds.length === 0) {
                alert('請至少選擇一個項目');
                return;
            }
            
            document.getElementById('batchDeleteCount').textContent = selectedIds.length;
            var modal = new bootstrap.Modal(document.getElementById('batchDeleteModal'));
            modal.show();
        }

        // 執行批次刪除
        function executeBatchDelete() {
            const selectedIds = batchSelector.getSelectedIds();
            submitBatchOperation('Delete', selectedIds.join(','));
        }

        // 顯示批次標籤對話框
        function showBatchTagModal() {
            const selectedIds = batchSelector.getSelectedIds();
            if (selectedIds.length === 0) {
                alert('請至少選擇一個項目');
                return;
            }
            
            document.getElementById('batchTagCount').textContent = selectedIds.length;
            var modal = new bootstrap.Modal(document.getElementById('batchTagModal'));
            modal.show();
        }

        // 執行批次標籤
        function executeBatchTag() {
            const tagName = document.getElementById('batchTagName').value.trim();
            const tagColor = document.getElementById('batchTagColor').value;
            
            if (!tagName) {
                alert('請輸入標籤名稱');
                return;
            }
            
            const selectedIds = batchSelector.getSelectedIds();
            const parameters = `tagName=${encodeURIComponent(tagName)}&tagColor=${encodeURIComponent(tagColor)}`;
            submitBatchOperation('AddTag', selectedIds.join(','), parameters);
        }

        // 顯示批次更改分類對話框
        function showBatchCategoryModal() {
            const selectedIds = batchSelector.getSelectedIds();
            if (selectedIds.length === 0) {
                alert('請至少選擇一個項目');
                return;
            }
            
            document.getElementById('batchCategoryCount').textContent = selectedIds.length;
            var modal = new bootstrap.Modal(document.getElementById('batchCategoryModal'));
            modal.show();
        }

        // 切換新分類表單
        function toggleNewCategoryForm() {
            const form = document.getElementById('newCategoryForm');
            const icon = document.getElementById('newCategoryToggleIcon');
            const text = document.getElementById('newCategoryToggleText');
            
            if (form.classList.contains('show')) {
                form.classList.remove('show');
                icon.className = 'fas fa-plus';
                text.textContent = '展開';
            } else {
                form.classList.add('show');
                icon.className = 'fas fa-minus';
                text.textContent = '收合';
                // 聚焦到輸入框
                setTimeout(() => {
                    document.getElementById('newCategoryName').focus();
                }, 300);
            }
        }

        // 建立新分類
        function createNewCategory() {
            const categoryName = document.getElementById('newCategoryName').value.trim();
            
            if (!categoryName) {
                alert('請輸入分類名稱');
                return;
            }
            
            // 檢查名稱是否已存在
            const existingOptions = Array.from(document.getElementById('batchCategorySelect').options);
            const exists = existingOptions.some(option => option.text === categoryName);
            
            if (exists) {
                alert('此分類名稱已存在，請使用其他名稱');
                return;
            }
            
            // 顯示載入狀態
            const createBtn = document.querySelector('[onclick="createNewCategory()"]');
            const originalText = createBtn.innerHTML;
            createBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 建立中...';
            createBtn.disabled = true;
            
            // 提交建立分類請求
            fetch('/index4?handler=CreateCategory', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `categoryName=${encodeURIComponent(categoryName)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 新增選項到下拉選單
                    const select = document.getElementById('batchCategorySelect');
                    const option = document.createElement('option');
                    option.value = data.categoryId;
                    option.text = categoryName;
                    option.selected = true;
                    select.add(option);
                    
                    // 清空輸入框並收合表單
                    document.getElementById('newCategoryName').value = '';
                    toggleNewCategoryForm();
                    
                    // 顯示成功訊息
                    alert(`分類「${categoryName}」建立成功！`);
                } else {
                    alert(`建立分類失敗：${data.message}`);
                }
            })
            .catch(error => {
                console.error('建立分類時發生錯誤:', error);
                alert('建立分類時發生錯誤，請稍後再試');
            })
            .finally(() => {
                // 恢復按鈕狀態
                createBtn.innerHTML = originalText;
                createBtn.disabled = false;
            });
        }

        // 執行批次更改分類
        function executeBatchCategory() {
            const categoryId = document.getElementById('batchCategorySelect').value;
            
            if (!categoryId) {
                alert('請選擇一個分類');
                return;
            }
            
            const selectedIds = batchSelector.getSelectedIds();
            const parameters = `categoryId=${encodeURIComponent(categoryId)}`;
            submitBatchOperation('ChangeCategory', selectedIds.join(','), parameters);
        }

        // 顯示批次匯出對話框
        function batchExport() {
            const selectedIds = batchSelector.getSelectedIds();
            if (selectedIds.length === 0) {
                alert('請至少選擇一個項目');
                return;
            }
            
            document.getElementById('batchExportCount').textContent = selectedIds.length;
            var modal = new bootstrap.Modal(document.getElementById('batchExportModal'));
            modal.show();
        }

        // 執行批次匯出
        function executeBatchExport(format) {
            const selectedIds = batchSelector.getSelectedIds();
            
            // 創建下載表單
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/index4?handler=Export&format=${format}`;
            form.style.display = 'none';
            
            // CSRF Token
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token.value;
                form.appendChild(tokenInput);
            }
            
            // 選中項目ID
            const idsInput = document.createElement('input');
            idsInput.type = 'hidden';
            idsInput.name = 'selectedIds';
            idsInput.value = selectedIds.join(',');
            form.appendChild(idsInput);
            
            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
            
            // 關閉對話框
            var modal = bootstrap.Modal.getInstance(document.getElementById('batchExportModal'));
            modal.hide();
            
            // 顯示提示訊息
            alert(`正在匯出 ${selectedIds.length} 則備忘錄為 ${format.toUpperCase()} 格式...`);
        }

        // 提交批次操作
        function submitBatchOperation(operation, selectedIds, parameters = '') {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/index4?handler=BatchOperation';
            
            // CSRF Token
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token.value;
                form.appendChild(tokenInput);
            }
            
            // 操作類型
            const operationInput = document.createElement('input');
            operationInput.type = 'hidden';
            operationInput.name = 'operation';
            operationInput.value = operation;
            form.appendChild(operationInput);
            
            // 選中項目ID
            const idsInput = document.createElement('input');
            idsInput.type = 'hidden';
            idsInput.name = 'selectedIds';
            idsInput.value = selectedIds;
            form.appendChild(idsInput);
            
            // 參數
            if (parameters) {
                const parametersInput = document.createElement('input');
                parametersInput.type = 'hidden';
                parametersInput.name = 'parameters';
                parametersInput.value = parameters;
                form.appendChild(parametersInput);
            }
            
            document.body.appendChild(form);
            form.submit();
        }

        // 即時搜尋
        let searchTimeout;
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    if (this.value.length >= 2 || this.value.length === 0) {
                        document.getElementById('searchForm').submit();
                    }
                }, 300);
            });
        }

        // 標籤管理相關函式
        function showTagManagementModal() {
            var modal = new bootstrap.Modal(document.getElementById('tagManagementModal'));
            modal.show();
        }

        function createNewTagFromManagement() {
            const tagName = document.getElementById('newTagName').value.trim();
            const tagColor = document.getElementById('newTagColor').value;
            
            if (!tagName) {
                alert('請輸入標籤名稱');
                return;
            }
            
            // 檢查名稱是否已存在
            const existingTags = Array.from(document.querySelectorAll('.tag-item'));
            const exists = existingTags.some(item => {
                const tagBadge = item.querySelector('.tag-badge');
                return tagBadge && tagBadge.textContent.trim() === tagName;
            });
            
            if (exists) {
                alert('此標籤名稱已存在，請使用其他名稱');
                return;
            }
            
            // 顯示載入狀態
            const createBtn = document.querySelector('[onclick="createNewTagFromManagement()"]');
            const originalText = createBtn.innerHTML;
            createBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 建立中...';
            createBtn.disabled = true;
            
            // 提交建立標籤請求（這裡需要實作API）
            fetch('/index4?handler=CreateTag', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `tagName=${encodeURIComponent(tagName)}&tagColor=${encodeURIComponent(tagColor)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 清空輸入框
                    document.getElementById('newTagName').value = '';
                    document.getElementById('newTagColor').value = '#007bff';
                    
                    // 重新載入頁面以顯示新標籤
                    location.reload();
                } else {
                    alert(`建立標籤失敗：${data.message}`);
                }
            })
            .catch(error => {
                console.error('建立標籤時發生錯誤:', error);
                alert('建立標籤時發生錯誤，請稍後再試');
            })
            .finally(() => {
                // 恢復按鈕狀態
                createBtn.innerHTML = originalText;
                createBtn.disabled = false;
            });
        }

        function confirmDeleteTag(tagId, tagName, usageCount) {
            document.getElementById('deleteTagName').textContent = tagName;
            
            const usageWarning = document.getElementById('tagUsageWarning');
            if (usageCount > 0) {
                document.getElementById('tagUsageCount').textContent = usageCount;
                usageWarning.style.display = 'block';
            } else {
                usageWarning.style.display = 'none';
            }
            
            // 設定確認按鈕的點擊事件
            const confirmBtn = document.getElementById('confirmDeleteTagBtn');
            confirmBtn.onclick = function() {
                deleteTag(tagId);
            };
            
            var modal = new bootstrap.Modal(document.getElementById('deleteTagModal'));
            modal.show();
        }

        function deleteTag(tagId) {
            // 顯示載入狀態
            const confirmBtn = document.getElementById('confirmDeleteTagBtn');
            const originalText = confirmBtn.innerHTML;
            confirmBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 刪除中...';
            confirmBtn.disabled = true;
            
            fetch('/index4?handler=DeleteTag', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `tagId=${tagId}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 關閉對話框
                    bootstrap.Modal.getInstance(document.getElementById('deleteTagModal')).hide();
                    
                    // 重新載入頁面
                    location.reload();
                } else {
                    alert(`刪除標籤失敗：${data.message}`);
                }
            })
            .catch(error => {
                console.error('刪除標籤時發生錯誤:', error);
                alert('刪除標籤時發生錯誤，請稍後再試');
            })
            .finally(() => {
                // 恢復按鈕狀態
                confirmBtn.innerHTML = originalText;
                confirmBtn.disabled = false;
            });
        }

        // 分類管理相關函式
        function showCategoryManagementModal() {
            var modal = new bootstrap.Modal(document.getElementById('categoryManagementModal'));
            modal.show();
        }

        function createNewCategoryFromManagement() {
            const categoryName = document.getElementById('newCategoryName').value.trim();
            
            if (!categoryName) {
                alert('請輸入分類名稱');
                return;
            }
            
            // 檢查名稱是否已存在
            const existingCategories = Array.from(document.querySelectorAll('.category-item'));
            const exists = existingCategories.some(item => {
                const categoryBadge = item.querySelector('.category-badge');
                return categoryBadge && categoryBadge.textContent.includes(categoryName);
            });
            
            if (exists) {
                alert('此分類名稱已存在，請使用其他名稱');
                return;
            }
            
            // 顯示載入狀態
            const createBtn = document.querySelector('[onclick="createNewCategoryFromManagement()"]');
            const originalText = createBtn.innerHTML;
            createBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 建立中...';
            createBtn.disabled = true;
            
            // 提交建立分類請求
            fetch('/index4?handler=CreateCategory', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `categoryName=${encodeURIComponent(categoryName)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 清空輸入框
                    document.getElementById('newCategoryName').value = '';
                    
                    // 重新載入頁面以顯示新分類
                    location.reload();
                } else {
                    alert(`建立分類失敗：${data.message}`);
                }
            })
            .catch(error => {
                console.error('建立分類時發生錯誤:', error);
                alert('建立分類時發生錯誤，請稍後再試');
            })
            .finally(() => {
                // 恢復按鈕狀態
                createBtn.innerHTML = originalText;
                createBtn.disabled = false;
            });
        }

        function confirmDeleteCategory(categoryId, categoryName) {
            document.getElementById('deleteCategoryName').textContent = categoryName;
            
            // 設定確認按鈕的點擊事件
            const confirmBtn = document.getElementById('confirmDeleteCategoryBtn');
            confirmBtn.onclick = function() {
                deleteCategory(categoryId);
            };
            
            var modal = new bootstrap.Modal(document.getElementById('deleteCategoryModal'));
            modal.show();
        }

        function deleteCategory(categoryId) {
            // 顯示載入狀態
            const confirmBtn = document.getElementById('confirmDeleteCategoryBtn');
            const originalText = confirmBtn.innerHTML;
            confirmBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 刪除中...';
            confirmBtn.disabled = true;
            
            fetch('/index4?handler=DeleteCategory', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `categoryId=${categoryId}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 關閉對話框
                    bootstrap.Modal.getInstance(document.getElementById('deleteCategoryModal')).hide();
                    
                    // 重新載入頁面
                    location.reload();
                } else {
                    alert(`刪除分類失敗：${data.message}`);
                }
            })
            .catch(error => {
                console.error('刪除分類時發生錯誤:', error);
                alert('刪除分類時發生錯誤，請稍後再試');
            })
            .finally(() => {
                // 恢復按鈕狀態
                confirmBtn.innerHTML = originalText;
                confirmBtn.disabled = false;
            });
        }
    </script>
}

@section Styles {
    <style>
        .search-highlight {
            background-color: #fff3cd;
            color: #856404;
            font-weight: bold;
        }
        
        .tag-badge {
            display: inline-block;
            padding: 0.25rem 0.5rem;
            border-radius: 0.375rem;
            color: white;
            font-size: 0.875rem;
            text-decoration: none;
        }
        
        .tag-filter-container {
            max-height: 120px;
            overflow-y: auto;
        }
        
        .note-card {
            transition: box-shadow 0.3s ease;
            border: 1px solid #dee2e6;
        }
        
        .note-card:hover {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        }
        
        .card-title a {
            color: #0d6efd;
        }
        
        .card-title a:hover {
            color: #0a58ca;
            text-decoration: underline !important;
        }
        
        .batch-toolbar {
            position: sticky;
            top: 10px;
            z-index: 1020;
        }
        
        .btn-group .btn {
            margin-right: 5px;
        }
        
        .btn-group .btn:last-child {
            margin-right: 0;
        }
        
        .item-checkbox {
            transform: scale(1.2);
        }
        
        #masterCheckbox {
            transform: scale(1.2);
        }
        
        /* 分類和標籤顯示樣式 */
        .category-badge {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
            color: white;
            border: none;
            font-weight: 500;
        }
        
        .no-tags-indicator {
            color: #6c757d;
            font-style: italic;
            font-size: 0.85rem;
        }
        
        .tag-badge {
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            font-weight: 500;
            border: 1px solid rgba(255,255,255,0.2);
        }
        
        .tag-badge:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 6px rgba(0,0,0,0.15);
        }
        
        /* 新分類表單樣式 */
        .new-category-form .card-body {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 1px solid #dee2e6;
        }
        
        .category-toggle-btn {
            color: #0d6efd;
            text-decoration: none;
        }
        
        .category-toggle-btn:hover {
            color: #0a58ca;
            text-decoration: underline;
        }
        
        /* 管理對話框樣式 */
        .tag-item, .category-item {
            transition: all 0.3s ease;
        }
        
        .tag-item:hover, .category-item:hover {
            background-color: #f8f9fa;
            border-color: #0d6efd !important;
        }
        
        .modal-lg .modal-body {
            max-height: 600px;
            overflow-y: auto;
        }
        
        .btn-link {
            color: #0d6efd;
            text-decoration: none;
        }
        
        .btn-link:hover {
            color: #0a58ca;
            text-decoration: underline;
        }
        
        @@media (max-width: 768px) {
            .btn-group {
                width: 100%;
                margin-top: 10px;
            }
            
            .btn-group .btn {
                flex: 1;
                margin-right: 5px;
                font-size: 0.8rem;
            }
            
            .search-container .btn {
                font-size: 0.9rem;
            }
            
            .batch-toolbar .btn-group .btn {
                font-size: 0.75rem;
                padding: 0.25rem 0.5rem;
            }
        }
    </style>
}
